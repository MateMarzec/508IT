@model PaginatedList<EventsPlusApp.Models.Owner>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center lightfont">Owners</h1>

<div class="container">
    <div class="row">
        <div class="col-sm-6">
            <p class="lightfont">
                <a asp-action="Create">Create New</a>
            </p>
        </div>
        <div class="col-sm-6">
            <form asp-action="Index" method="get">
                <div class="form-actions no-color">
                    <p class=" col-xs lightfont">
                        <label for="search">Search By any column: </label>
                        <input type="text" id="search" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]" />
                        <input type="submit" value="Search" class="btn btn-primary" /> |
                        <a asp-action="Index" class=" lightfont">Back to Full List</a>
                    </p>
                </div>
            </form>
        </div>
    </div>
</div>
<table class="table lightfont">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["FirstNameSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">  First Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">  Last Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PhoneNumberSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">  Phone Number</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
     asp-route-sortOrder="@ViewData["CurrentSort"]"
     asp-route-pageNumber="@(Model.PageIndex - 1)"
     asp-route-currentFilter="@ViewData["CurrentFilter"]"
     class="btn btn-info @prevDisabled">
    Previous
</a>
<a asp-action="Index"
     asp-route-sortOrder="@ViewData["CurrentSort"]"
     asp-route-pageNumber="@(Model.PageIndex + 1)"
     asp-route-currentFilter="@ViewData["CurrentFilter"]"
     class="btn btn-info @nextDisabled">
    Next
</a>
